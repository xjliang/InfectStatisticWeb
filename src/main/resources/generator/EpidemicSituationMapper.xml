<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.fzu.infect.generator.EpidemicSituationMapper">
  <resultMap id="BaseResultMap" type="edu.fzu.infect.generator.EpidemicSituation">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="province_code" jdbcType="VARCHAR" property="provinceCode" />
    <result column="province_name" jdbcType="VARCHAR" property="provinceName" />
    <result column="update_date" jdbcType="DATE" property="updateDate" />
    <result column="new_suspect_num" jdbcType="INTEGER" property="newSuspectNum" />
    <result column="total_suspect_num" jdbcType="INTEGER" property="totalSuspectNum" />
    <result column="new_confirm_num" jdbcType="INTEGER" property="newConfirmNum" />
    <result column="total_confirm_num" jdbcType="INTEGER" property="totalConfirmNum" />
    <result column="new_dead_num" jdbcType="INTEGER" property="newDeadNum" />
    <result column="total_dead_num" jdbcType="INTEGER" property="totalDeadNum" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, province_code, province_name, update_date, new_suspect_num, total_suspect_num,
    new_confirm_num, total_confirm_num, new_dead_num, total_dead_num
  </sql>
  <select id="selectByExample" parameterType="edu.fzu.infect.generator.EpidemicSituationExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from epidemic_situation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from epidemic_situation
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from epidemic_situation
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="edu.fzu.infect.generator.EpidemicSituationExample">
    delete from epidemic_situation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="edu.fzu.infect.generator.EpidemicSituation">
    insert into epidemic_situation (id, province_code, province_name, update_date,
      new_suspect_num, total_suspect_num, new_confirm_num,
      total_confirm_num, new_dead_num, total_dead_num
      )
    values (#{id,jdbcType=VARCHAR}, #{provinceCode,jdbcType=VARCHAR}, #{provinceName,jdbcType=VARCHAR}, #{updateDate,jdbcType=DATE},
      #{newSuspectNum,jdbcType=INTEGER}, #{totalSuspectNum,jdbcType=INTEGER}, #{newConfirmNum,jdbcType=INTEGER},
      #{totalConfirmNum,jdbcType=INTEGER}, #{newDeadNum,jdbcType=INTEGER}, #{totalDeadNum,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="edu.fzu.infect.generator.EpidemicSituation" useGeneratedKeys="true">
    insert into epidemic_situation
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="provinceCode != null">
        province_code,
      </if>
      <if test="provinceName != null">
        province_name,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
      <if test="newSuspectNum != null">
        new_suspect_num,
      </if>
      <if test="totalSuspectNum != null">
        total_suspect_num,
      </if>
      <if test="newConfirmNum != null">
        new_confirm_num,
      </if>
      <if test="totalConfirmNum != null">
        total_confirm_num,
      </if>
      <if test="newDeadNum != null">
        new_dead_num,
      </if>
      <if test="totalDeadNum != null">
        total_dead_num,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="provinceCode != null">
        #{provinceCode,jdbcType=VARCHAR},
      </if>
      <if test="provinceName != null">
        #{provinceName,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=DATE},
      </if>
      <if test="newSuspectNum != null">
        #{newSuspectNum,jdbcType=INTEGER},
      </if>
      <if test="totalSuspectNum != null">
        #{totalSuspectNum,jdbcType=INTEGER},
      </if>
      <if test="newConfirmNum != null">
        #{newConfirmNum,jdbcType=INTEGER},
      </if>
      <if test="totalConfirmNum != null">
        #{totalConfirmNum,jdbcType=INTEGER},
      </if>
      <if test="newDeadNum != null">
        #{newDeadNum,jdbcType=INTEGER},
      </if>
      <if test="totalDeadNum != null">
        #{totalDeadNum,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="edu.fzu.infect.generator.EpidemicSituationExample" resultType="java.lang.Long">
    select count(*) from epidemic_situation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update epidemic_situation
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.provinceCode != null">
        province_code = #{record.provinceCode,jdbcType=VARCHAR},
      </if>
      <if test="record.provinceName != null">
        province_name = #{record.provinceName,jdbcType=VARCHAR},
      </if>
      <if test="record.updateDate != null">
        update_date = #{record.updateDate,jdbcType=DATE},
      </if>
      <if test="record.newSuspectNum != null">
        new_suspect_num = #{record.newSuspectNum,jdbcType=INTEGER},
      </if>
      <if test="record.totalSuspectNum != null">
        total_suspect_num = #{record.totalSuspectNum,jdbcType=INTEGER},
      </if>
      <if test="record.newConfirmNum != null">
        new_confirm_num = #{record.newConfirmNum,jdbcType=INTEGER},
      </if>
      <if test="record.totalConfirmNum != null">
        total_confirm_num = #{record.totalConfirmNum,jdbcType=INTEGER},
      </if>
      <if test="record.newDeadNum != null">
        new_dead_num = #{record.newDeadNum,jdbcType=INTEGER},
      </if>
      <if test="record.totalDeadNum != null">
        total_dead_num = #{record.totalDeadNum,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update epidemic_situation
    set id = #{record.id,jdbcType=VARCHAR},
      province_code = #{record.provinceCode,jdbcType=VARCHAR},
      province_name = #{record.provinceName,jdbcType=VARCHAR},
      update_date = #{record.updateDate,jdbcType=DATE},
      new_suspect_num = #{record.newSuspectNum,jdbcType=INTEGER},
      total_suspect_num = #{record.totalSuspectNum,jdbcType=INTEGER},
      new_confirm_num = #{record.newConfirmNum,jdbcType=INTEGER},
      total_confirm_num = #{record.totalConfirmNum,jdbcType=INTEGER},
      new_dead_num = #{record.newDeadNum,jdbcType=INTEGER},
      total_dead_num = #{record.totalDeadNum,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="edu.fzu.infect.generator.EpidemicSituation">
    update epidemic_situation
    <set>
      <if test="provinceCode != null">
        province_code = #{provinceCode,jdbcType=VARCHAR},
      </if>
      <if test="provinceName != null">
        province_name = #{provinceName,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=DATE},
      </if>
      <if test="newSuspectNum != null">
        new_suspect_num = #{newSuspectNum,jdbcType=INTEGER},
      </if>
      <if test="totalSuspectNum != null">
        total_suspect_num = #{totalSuspectNum,jdbcType=INTEGER},
      </if>
      <if test="newConfirmNum != null">
        new_confirm_num = #{newConfirmNum,jdbcType=INTEGER},
      </if>
      <if test="totalConfirmNum != null">
        total_confirm_num = #{totalConfirmNum,jdbcType=INTEGER},
      </if>
      <if test="newDeadNum != null">
        new_dead_num = #{newDeadNum,jdbcType=INTEGER},
      </if>
      <if test="totalDeadNum != null">
        total_dead_num = #{totalDeadNum,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.fzu.infect.generator.EpidemicSituation">
    update epidemic_situation
    set province_code = #{provinceCode,jdbcType=VARCHAR},
      province_name = #{provinceName,jdbcType=VARCHAR},
      update_date = #{updateDate,jdbcType=DATE},
      new_suspect_num = #{newSuspectNum,jdbcType=INTEGER},
      total_suspect_num = #{totalSuspectNum,jdbcType=INTEGER},
      new_confirm_num = #{newConfirmNum,jdbcType=INTEGER},
      total_confirm_num = #{totalConfirmNum,jdbcType=INTEGER},
      new_dead_num = #{newDeadNum,jdbcType=INTEGER},
      total_dead_num = #{totalDeadNum,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>
